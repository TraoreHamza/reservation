{# <div{{attributes}} class="bg-white rounded-lg shadow-md p-6">
	<h3 class="text-lg font-semibold mb-4 text-gray-800">üîç Recherche avanc√©e de salles</h3>
	
	<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
		<!-- Terme de recherche principal -->
		<div>
			<label for="search-query" class="block text-sm font-medium text-gray-700 mb-2">
				Terme de recherche
			</label>
			<input 
				type="text" 
				id="search-query"
				data-model="query" 
				placeholder="Nom, description, √©quipements..."
				class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>

		<!-- Recherche g√©ographique -->
		<div>
			<label for="search-location" class="block text-sm font-medium text-gray-700 mb-2">
				Localisation
			</label>
			<div class="relative">
				<input 
					type="text" 
					id="search-location"
					data-model="location" 
					placeholder="Ville, d√©partement, r√©gion..."
					class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
					autocomplete="off"
				/>
				<div id="location-suggestions" class="absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg hidden max-h-60 overflow-y-auto">
					<!-- Les suggestions appara√Ætront ici -->
				</div>
			</div>
		</div>

		<!-- Capacit√© -->
		<div>
			<label for="search-capacity" class="block text-sm font-medium text-gray-700 mb-2">
				Capacit√© minimum
			</label>
			<input 
				type="number" 
				id="search-capacity"
				data-model="capacity" 
				min="1"
				placeholder="Nombre de personnes"
				class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>

		<!-- Prix maximum -->
		<div>
			<label for="search-price" class="block text-sm font-medium text-gray-700 mb-2">
				Prix maximum par jour
			</label>
			<input 
				type="number" 
				id="search-price"
				data-model="maxPrice" 
				min="0"
				step="0.01"
				placeholder="Prix en euros"
				class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
			/>
		</div>

		<!-- Options -->
		<div>
			<label for="search-option" class="block text-sm font-medium text-gray-700 mb-2">
				Options
			</label>
			<select data-model="option" id="search-option" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
				<option value="">Toutes les options</option>
				<option value="Vid√©oprojecteur">Vid√©oprojecteur</option>
				<option value="Tableau blanc">Tableau blanc</option>
				<option value="Paperboard">Paperboard</option>
				<option value="Connexion Wi-Fi">Connexion Wi-Fi</option>
				<option value="Climatisation">Climatisation</option>
			</select>
		</div>

		<!-- √âquipements -->
		<div>
			<label for="search-equipment" class="block text-sm font-medium text-gray-700 mb-2">
				√âquipements
			</label>
			<select data-model="equipment" id="search-equipment" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
				<option value="">Tous les √©quipements</option>
				<option value="Vid√©oprojecteur">Vid√©oprojecteur</option>
				<option value="Tableau blanc">Tableau blanc</option>
				<option value="Paperboard">Paperboard</option>
				<option value="Connexion Wi-Fi">Connexion Wi-Fi</option>
				<option value="Climatisation">Climatisation</option>
			</select>
		</div>
	</div>

	<!-- Filtres ergonomiques -->
	<div class="flex flex-wrap gap-4 mt-4 p-4 bg-gray-50 rounded-md">
		<label class="flex items-center gap-2">
			<input type="checkbox" data-model="luminosity" class="rounded text-blue-600 focus:ring-blue-500">
			<span class="text-sm font-medium text-gray-700">Luminosit√© naturelle</span>
		</label>
		
		<label class="flex items-center gap-2">
			<input type="checkbox" data-model="pmr_access" class="rounded text-blue-600 focus:ring-blue-500">
			<span class="text-sm font-medium text-gray-700">Accessibilit√© PMR</span>
		</label>
	</div>

	<!-- Bouton de recherche -->
	<div class="mt-6">
		<button type="button" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition-colors">
			üîç Rechercher
		</button>
	</div>

	<!-- R√©sultats -->
	{% set rooms = this.rooms %}
	{% if rooms|length > 0 %}
		<div class="mt-6">
			<h4 class="text-lg font-semibold mb-4 text-gray-800">üìã R√©sultats ({{ rooms|length }} salle(s) trouv√©e(s))</h4>
			<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
				{% for room in rooms %}
					<div class="bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
						<h5 class="font-semibold text-gray-800 mb-2">{{ room.name }}</h5>
						<p class="text-sm text-gray-600 mb-2">{{ room.description|length > 100 ? room.description|slice(0, 100) ~ '...' : room.description }}</p>
						<div class="flex justify-between items-center text-sm">
							<span class="text-gray-500">Capacit√©: {{ room.capacity }} pers.</span>
							<span class="font-semibold text-blue-600">{{ room.price }}‚Ç¨/jour</span>
						</div>
						<div class="mt-2">
							<span class="inline-block px-2 py-1 rounded-full text-xs font-semibold
								{{ room.isAvailable ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700' }}">
								{{ room.isAvailable ? 'Disponible' : 'Indisponible' }}
							</span>
						</div>
					</div>
				{% endfor %}
			</div>
		</div>
	{% else %}
		<div class="mt-6 text-center py-8">
			<p class="text-gray-500">üîç Aucune salle trouv√©e avec ces crit√®res</p>
			<p class="text-sm text-gray-400 mt-2">Essayez de modifier vos filtres de recherche</p>
		</div>
	{% endif %}
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
	const locationInput = document.getElementById('search-location');
	const suggestionsDiv = document.getElementById('location-suggestions');
	let timeoutId;

	if (locationInput && suggestionsDiv) {
		locationInput.addEventListener('input', function() {
			clearTimeout(timeoutId);
			const query = this.value.trim();
			
			if (query.length < 2) {
				suggestionsDiv.classList.add('hidden');
				return;
			}

			timeoutId = setTimeout(() => {
				fetch(`/api/geographic/search?q=${encodeURIComponent(query)}&type=all`)
					.then(response => response.json())
					.then(data => {
						displaySuggestions(data, query);
					})
					.catch(error => {
						console.error('Erreur lors de la recherche g√©ographique:', error);
					});
			}, 300);
		});

		// Fermer les suggestions en cliquant ailleurs
		document.addEventListener('click', function(e) {
			if (!locationInput.contains(e.target) && !suggestionsDiv.contains(e.target)) {
				suggestionsDiv.classList.add('hidden');
			}
		});
	}

	function displaySuggestions(data, query) {
		suggestionsDiv.innerHTML = '';
		
		let hasResults = false;

		// Afficher les communes
		if (data.communes && data.communes.length > 0) {
			hasResults = true;
			const communeSection = document.createElement('div');
			communeSection.className = 'p-2 border-b border-gray-100';
			communeSection.innerHTML = '<div class="text-xs font-semibold text-gray-500 mb-1">üèòÔ∏è Communes</div>';
			
			data.communes.slice(0, 5).forEach(commune => {
				const item = document.createElement('div');
				item.className = 'px-2 py-1 hover:bg-gray-100 cursor-pointer text-sm';
				item.textContent = `${commune.name} (${commune.department_name})`;
				item.onclick = () => {
					locationInput.value = commune.name;
					suggestionsDiv.classList.add('hidden');
				};
				communeSection.appendChild(item);
			});
			suggestionsDiv.appendChild(communeSection);
		}

		// Afficher les d√©partements
		if (data.departments && data.departments.length > 0) {
			hasResults = true;
			const deptSection = document.createElement('div');
			deptSection.className = 'p-2 border-b border-gray-100';
			deptSection.innerHTML = '<div class="text-xs font-semibold text-gray-500 mb-1">üó∫Ô∏è D√©partements</div>';
			
			data.departments.slice(0, 3).forEach(dept => {
				const item = document.createElement('div');
				item.className = 'px-2 py-1 hover:bg-gray-100 cursor-pointer text-sm';
				item.textContent = `${dept.name} (${dept.code})`;
				item.onclick = () => {
					locationInput.value = dept.name;
					suggestionsDiv.classList.add('hidden');
				};
				deptSection.appendChild(item);
			});
			suggestionsDiv.appendChild(deptSection);
		}

		// Afficher les r√©gions
		if (data.regions && data.regions.length > 0) {
			hasResults = true;
			const regionSection = document.createElement('div');
			regionSection.className = 'p-2';
			regionSection.innerHTML = '<div class="text-xs font-semibold text-gray-500 mb-1">üåç R√©gions</div>';
			
			data.regions.slice(0, 3).forEach(region => {
				const item = document.createElement('div');
				item.className = 'px-2 py-1 hover:bg-gray-100 cursor-pointer text-sm';
				item.textContent = region;
				item.onclick = () => {
					locationInput.value = region;
					suggestionsDiv.classList.add('hidden');
				};
				regionSection.appendChild(item);
			});
			suggestionsDiv.appendChild(regionSection);
		}

		if (hasResults) {
			suggestionsDiv.classList.remove('hidden');
		} else {
			suggestionsDiv.classList.add('hidden');
		}
	}
});
</script> #}

<div{{attributes}} class="flex gap-4">
		<input type="text" data-model="query" class="grow" placeholder="Tapez un mot-cl√©..."/>
	<select data-model="option" id="">

		<option value="">Les options</option>
		{% set options = this.options %}

		{% for item in options %}
			<option value={{item.name}}>{{item.name}}</option>
		{% endfor %}
	</select>

	<select data-model="equipment" id="">

		<option value="">Les equipements</option>
		{% set equipments = this.equipments %}

		{% for item in equipments %}
			<option value={{item.name}}>{{item.name}}</option>
		{% endfor %}
	</select>
	<select data-model="location" id="">
		<option value="">La location</option>
		{% set locations = this.locations %}

		{% for item in locations %}
			<option value={{item.department}}>{{item.department}}</option>
		{% endfor %}
	</select>
	{% set rooms = this.rooms %}
	{% if rooms|length > 0 %}

		{% else %}

			<p>Pas de resultat</p>
	{% endif %}
</div>
